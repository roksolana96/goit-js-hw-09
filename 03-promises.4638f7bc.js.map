{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,UACvBD,SAASC,cAAc,wBACzBD,SAASC,cAAc,sBACtBD,SAASC,cAAc,uBAyBrC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAjCPN,EAAKe,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBACNd,EAAOe,UAAUC,IAAI,YAMrB,IALA,IAEuBC,EAAnBJ,EAAMK,cADRC,SAAYC,EAAMH,EAANI,OAAQC,EAAIL,EAAJM,KAAMC,EAAKP,EAALN,MAExBc,EAAWC,OAAOF,EAAMG,OAEnBC,EAAI,EAAGA,GAAKR,EAAOO,MAAOC,IACjC3B,EAAc2B,EAAGH,GACdI,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAU6B,EAAKD,EAALnB,MACjBhB,EAAAqC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUkC,EAAKN,EAALnB,MAClBhB,EAAAqC,OAAOK,QAAQ,sBAAqCH,OAAfhC,EAAS,QAAYgC,OAANE,EAAM,M,IAE9DX,GAAYC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst button = document.querySelector('button');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst delay = document.querySelector('input[name=\"delay\"]');\n\nform.addEventListener('submit', submitForm)\n\nfunction submitForm(event) {\n  event.preventDefault();\n  button.classList.add('disabled');\n  const {\n    elements: { amount, step, delay },\n  } = event.currentTarget;\n  let numDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, numDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    numDelay += Number(step.value);\n  }\n};\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$createPromise","position","delay4","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","classList","add","_elements","currentTarget","elements","amount1","amount","step1","step","delay1","numDelay","Number","value","i","then","param","delay2","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.4638f7bc.js.map"}